import { EditorState } from "./state";
import { serializeLayout, deserializeLayout } from "../world/layout";

export function saveJson(state: EditorState) {
  const json = serializeLayout(state.items);
  downloadText(json, "layout.json", "application/json");
}

export function saveTsModule(state: EditorState) {
  const ts = [
    `// Generated by SceneEditor`,
    `import { Item } from "../world/layout";`,
    ``,
    `export const LAYOUT: Item[] = ${JSON.stringify(state.items, null, 2)} as const;`,
    ``,
  ].join("\n");
  downloadText(ts, "layout-export.ts", "text/typescript");
}

export function promptLoadJson(state: EditorState) {
  const json = prompt("Paste layout JSON:");
  if (!json) return;
  const arr = deserializeLayout(json);
  if (arr.length) {
    state.items = arr;
    state.rebuildWorld();
  }
}

function downloadText(text: string, filename: string, mime: string) {
  const blob = new Blob([text], { type: mime });
  const url = URL.createObjectURL(blob);
  const a = document.createElement("a");
  a.href = url; a.download = filename; a.rel = "noopener";
  document.body.appendChild(a);
  a.click();
  a.remove();
  URL.revokeObjectURL(url);
}
